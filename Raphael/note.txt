Step1: 创建画布

//创建raphael对象，依赖于raphael的方法和function
var raphaelObj = Raphael(x,y,width,height);
Raphael function中4个参数分别是x坐标、y坐标、宽度、高度。

//元素本身作为参数
//This line creates a Raphael paper inside 'my-canvas', which is 650pxin width and 400px in height
var elm= document.getElementById("my-canvas");
var paper = Raphael(elm, 650, 400);

//or

// 直接传递元素的ID作为参数
//This line also creates a Raphael paper inside 'my-canvas', which is 650px in width and 400px in height
var paper = Raphael("my-canvas", 650, 400);

Step2: 绘制圆形

var cir = paper.circle(x,y,r);
// x and y are the positioning co-ordinates, and "r" is the radius of the circle
//Here the circle is assigned to a variable called cir.

//Example
var cir = paper.circle(35,25,20);

// This will create a circle of 20 pixels in radius at 35,25 (X & Y axis).


RaphaelJS有3个基本图形，分别是 圆、椭圆和矩形

矩形

我们可以使用rect()方法来创建一个矩形。这个方法一共有4个必须参数和一个可选参数。5个参数按顺序分别是x坐标、y坐标、矩形宽度、矩形高度、圆角半径。

圆角半径默认为0，为可选参数。

语法如下：

paper.rect(X,Y,Width,Height,border-radius(optional));

var rect = paper.rect(35,25,170,100).attr({
"fill":"#17A9C6", //filling with background color
"stroke":"#2A6570", // border color of the rectangle
"stroke-width":2 // the width of the border

});

 圆角矩形：
var rect = paper.rect(35,25,170,100,20).attr({
"fill":"#17A9C6", //filling with background color
"stroke":"#2A6570", // border color of the rectangle
"stroke-width":2 // the width of the border

});


椭圆的方法是ellipse(),有4个必要参数。分别是x坐标、y坐标、水平半径、垂直半径。水平半径和垂直半径其实就是椭圆的宽和高除以2。
语法如下：
paper.ellipse(X,Y,rX,rY);

var ellipse = paper.ellipse(195,125,170,100).attr({

"fill":"#17A9C6", // background color of the ellipse

"stroke":"#2A6570", // ellipse's border color
"stroke-width":2 // border width

});
由于和上面矩形的代码几乎一致，除了参数意义。这里不再重复代码和截图。

复杂图形

Paper.path([pathString])

pathString SVG格式的路径字符串。
路径字符串由一个或多个命令组成。每个命令以一个字母开始，随后是逗号（“,”）分隔的参数。例如："M10,20L30,40"

我们看到两个命令：“M”与参数(10, 20)和“L”与参数(30, 40)大写字母的意思是命令是绝对的，小写是相对的。

这里是可用命令的简表，详细内容请参照：SVG路径字符串格式 。

命令	名称	参数
M	移动到（moveTo）	(x y)+
Z	闭合路径（closepath）	(none)
L	直线（lineTo）	(x y)+
H	水平直线	x+
V	垂直直线	y+
C	曲线（curveto）	(x1 y1 x2 y2 x y)+
S	平滑曲线	(x2 y2 x y)+
Q	二次贝赛尔曲线	(x1 y1 x y)+
T	平滑二次贝塞尔曲线	(x y)+
A	椭圆弧	(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+
R	Catmull-Rom 曲线*	x1 y1 (x y)+
* “Catmull-Rom 曲线”不是标准SVG命令，在2.0版时被加入。 注：有种特殊情况，路径只包含三个命令：“M10,10R…z”。在这种情况下，路径将平滑连接到它的起点。

语法如下：

paper.path("pathString");

var tri = paper.path("M0,0L26,0L13,18L0,0").attr({

"fill":"#17A9C6", // filling the background color
"stroke":"#2A6570", // the color of the border
"stroke-width":2 // the size of the border

});

ref:
http://www.cnblogs.com/idealer3d/p/Instant_RaphaelJS_Starter.html
http://www.cnblogs.com/idealer3d/p/Instant_RaphaelJS_Starter2.html
http://www.cnblogs.com/idealer3d/p/Instant_RaphaelJS_Starter3.html
